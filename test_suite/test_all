#!/usr/bin/env python3
import os
import sys
from random import randint
from numpy import uint64, int64

os.system("coverage erase")


result = os.system("coverage run -p ./test_api.py")

if result == 0:
  print("...pass")
else:
  print("...fail")
  sys.exit(0)

result = os.system("coverage run -p ../chips/components/components.py")

if result == 0:
  print("...pass")
else:
  print("...fail")
  sys.exit(0)

result = os.system("coverage run -p ../csim test_suite/test_math.c")

if result == 0:
  print("...pass")
else:
  print("...fail")
  sys.exit(0)

result = os.system("./test_compiler coverage")

if result == 0:
  print("...pass")
else:
  print("...fail")
  sys.exit(0)

#os.system("coverage run -p ../c2verilog dump_raw test.c")
#os.system("coverage run -p ../c2verilog dump_optimised test.c")
os.system("coverage combine")
os.system("coverage report > coverage_report")
os.system("coverage annotate ../c2verilog")
os.system("coverage annotate ../csim")
os.system("coverage annotate ../chips/compiler/parser.py")
os.system("coverage annotate ../chips/compiler/compiler.py")
os.system("coverage annotate ../chips/compiler/macro_expander.py")
os.system("coverage annotate ../chips/compiler/optimizer.py")
os.system("coverage annotate ../chips/compiler/tokens.py")
os.system("coverage annotate ../chips/compiler/allocator.py")
os.system("coverage annotate ../chips/compiler/compiler.py")
os.system("coverage annotate ../chips/compiler/verilog_area.py")
